name: Publish ZIP packages and images
on:
  push:
    branches:
      - main
      - feature/*

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-runtimes: ${{ steps.changes.outputs.runtimes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - id: changes
        name: Detect changed runtimes
        run: |
          changed=$(git diff --name-only HEAD~1 | grep '^runtimes/' | cut -d'/' -f2 | sort -u | jq -R -s -c 'split("\n")[:-1]')
          echo "runtimes=${changed}" >> $GITHUB_OUTPUT

  package:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed-runtimes != '[]'
    strategy:
      matrix:
        runtime: ${{fromJson(needs.detect-changes.outputs.changed-runtimes)}}
        architecture: [arm64, x86_64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: ZIP package and image
        run: pnpm package ${{ matrix.runtime }} ${{ matrix.architecture }}

  aggregate:
    needs: [detect-changes, package]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Aggregate package sizes
        run: |
          if [ -f data/packageSizes.json ]; then
            cp data/packageSizes.json /tmp/existing.json
          else
            echo '{"packageSizes":[]}' > /tmp/existing.json
          fi
          
          cat > /tmp/new-sizes.json << 'EOF'
          ${{ toJson(needs.package.outputs) }}
          EOF
          
          jq -n '
            (input | .packageSizes) as $existing |
            (input | to_entries | map(select(.key | startswith("result-")) | .value | fromjson)) as $new |
            ($new | map("\(.runtime)-\(.architecture)")) as $changed_keys |
            {
              packageSizes: (
                ($existing | map(select("\(.runtime)-\(.architecture)" | IN($changed_keys[]) | not))) +
                ($new | map(
                  {runtime, architecture, packageType: "zip", size: .zipSize},
                  {runtime, architecture, packageType: "image", size: .imageSize}
                ))
              )
            }
          ' /tmp/existing.json /tmp/new-sizes.json > data/packageSizes.json
      
      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/packageSizes.json
          git diff --staged --quiet || git commit -m "Update package sizes [skip ci]"
          git push